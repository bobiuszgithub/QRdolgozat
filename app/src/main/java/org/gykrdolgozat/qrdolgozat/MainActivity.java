package org.gykrdolgozat.qrdolgozat;import android.Manifest;import android.content.Intent;import android.content.pm.PackageManager;import android.net.Uri;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.appcompat.app.AppCompatActivity;import androidx.core.app.ActivityCompat;import com.google.zxing.integration.android.IntentIntegrator;import com.google.zxing.integration.android.IntentResult;import java.io.IOException;public class MainActivity extends AppCompatActivity {    private TextView textResult;    private Button btnScan, btnkiir;    private boolean writePermission;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        init();        btnScan.setOnClickListener(v -> {            IntentIntegrator intentIntegrator = new IntentIntegrator(MainActivity.this);            intentIntegrator.setDesiredBarcodeFormats(IntentIntegrator.QR_CODE);            intentIntegrator.setPrompt("QR CODE SCAN");            intentIntegrator.setCameraId(0);            intentIntegrator.setBeepEnabled(false);            intentIntegrator.setBarcodeImageEnabled(true);            intentIntegrator.initiateScan();        });        btnkiir.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                if (writePermission) {                    try {                        Kiiras.kiir(textResult.getText().toString());                    } catch (IOException e) {                        Log.d("Kiiras", e.getMessage());                        e.printStackTrace();                    }                }            }        });    }    @Override    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        IntentResult result =                IntentIntegrator.parseActivityResult(requestCode, resultCode, data);        if (result != null) {            if (result.getContents() == null) {                Toast.makeText(this, "Kiléptél a scanből", Toast.LENGTH_SHORT).show();            } else {                textResult.setText(result.getContents());                try {                    Uri url = Uri.parse(result.getContents());                    Intent intent = new Intent(Intent.ACTION_VIEW, url);                    startActivity(intent);                } catch (Exception exception) {                    Log.d("URI ERROR", exception.toString());                }            }        }        super.onActivityResult(requestCode, resultCode, data);    }    private void init() {        btnkiir = findViewById(R.id.btn_ki_ir);        btnScan = findViewById(R.id.btn_scan);        textResult = findViewById(R.id.text_Scan_Result);        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)                != PackageManager.PERMISSION_GRANTED ||                ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)                        != PackageManager.PERMISSION_GRANTED) {            writePermission = false;            String[] permissions =                    new String[]{Manifest.permission.READ_EXTERNAL_STORAGE,                            Manifest.permission.WRITE_EXTERNAL_STORAGE};            ActivityCompat.requestPermissions(this, permissions, 0);        }else{            writePermission = true;        }    }    @Override    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,                                           @NonNull int[] grantResults) {        if (requestCode == 0) {            writePermission =                    ActivityCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)                            == PackageManager.PERMISSION_GRANTED &&                            ActivityCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)                                    == PackageManager.PERMISSION_GRANTED;        }        super.onRequestPermissionsResult(requestCode, permissions, grantResults);    }}